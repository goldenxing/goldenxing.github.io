{"pages":[{"title":"categories","text":"数据库","path":"categories/index.html"},{"title":"tags","text":"mysql","path":"tags/index.html"}],"posts":[{"title":"MySQL中利用索引优化","text":"一、关于索引 索引顾名思义就是检索、指引，就像一本书的目录一样，当我们根据条件查询而没有索引时数据库就会进行全表扫描，也就是一个一个进行查找，如果数据量很少那么不会影响么，但咱们的目标不都是处理千万级甚至上亿级别数据的高端程序员嘛（码畜也要有目标不是），如果没有索引，那么在超大数据量的查询操作中一条数据可能会花费10几秒的时间，这在当前的社会是 不被允许的。 二、索引的类别和语法索引的类别：mysql中的常用索引有三种：主键索引、普通索引、聚合索引。1. 主键索引：主键索引就是加在主键上的索引，一般在建表设置主键时会自动创建索引。 2. 普通索引： 创建在非主键列上的索引。 3. 聚合索引： 创建在N个列上的索引。 索引的语法：创建普通索引：ALTER TABLE 表名 ADD INDEX 索引名 (加索引的列) 创建聚合索引：ALTER TABLE 表名 ADD INDEX 索引名 (加索引的列1,加索引的列2) 查看某张表的索引：SHOW INDEX FROM 表名； 删除某张表的索引：DROP INDEX 索引名 ON 表名; 三、实际操作“纸上得来终觉浅，绝知此事要躬行”废话少说，先建一张千万条数据的表。先创建一张表: 12345678 DROP TABLE IF EXISTS `test_user`; CREATE TABLE `test_user` ( `id` bigint(20) PRIMARY key not null AUTO_INCREMENT, `username` varchar(50) DEFAULT NULL, `email` varchar(30) DEFAULT NULL, `password` varchar(32) DEFAULT NULL, `status` tinyint(1) NULL DEFAULT 0) ENGINE=MyISAM DEFAULT CHARSET=utf8; ENGINE 用MyISAM是因为它的插入速度快，毕竟是千万级。。。 然后利用存储过程插入一千万的数据（这个不大了解copy来的，有时间弄弄）: 123456789 create procedure demo()begin declare num int; set num=1; while num &lt;= 10000000 do insert into test_user(username,email,password) values(CONCAT(&apos;username_&apos;,num), CONCAT(num ,&apos;@qq.com&apos;), MD5(num)); set num=num+1; end while; end 然后执行存储过程 call demo();等待程序运行完毕，你就能获得一张内含千万级数据的表啦。得到表之后我们先来运行下查询语句看看时间： SELECT id,username,email,password FROM test_user WHERE id=9999987","path":"2019/03/04/MySQL中利用索引优化/"}]}